# Makefile that uses the system jss

# settings to use system jss in fedora 30
export LIBRARYPATH4FEDORA=/usr/lib64:/usr/lib64/jss:/usr/share/java
export CLASSPATH4FEDORA=.:/usr/lib/java/jss4.jar:/usr/share/java/slf4j/api.jar

# settings to use system jss in debian 9
export LIBRARYPATH4DEBIAN9=/usr/lib64:/usr/lib64/jss:/usr/share/java
export CLASSPATH4DEBIAN9=.:/usr/share/java/jss-4.3.1.jar:/usr/share/java/slf4j/api.jar

# settings to use system jss in ubuntu 19
export LIBRARYPATH4UBUNTU=/usr/lib64:/usr/lib64/jss:/usr/share/java
export CLASSPATH4UBUNTU=.:/usr/share/java/jss-4.5.1.jar:/usr/share/java/slf4j/api.jar

# settings to use system jss in openSUSE
export LIBRARYPATH4OPENSUSE=/usr/lib64:/usr/share/java
export CLASSPATH4OPENSUSE=.:/usr/lib64/java/jss4-4.5.0.jar:/usr/share/java/slf4j/api.jar

# switch to the one you wish to use
export LD_LIBRARY_PATH=${LIBRARYPATH4FEDORA}
export CLASSPATH=${CLASSPATH4FEDORA}

JFLAGS = -g  -classpath ${CLASSPATH} -sourcepath . -d .
JC = javac
JVM= java 
FILE=

.SUFFIXES: .java .class

.java.class:
	$(JC) $(JFLAGS) $*.java


CLASSES = \
	Lister.java


MAIN = Lister


default: classes

classes: $(CLASSES:.java=.class)


run: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) Mozilla-JSS

JSS: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) Mozilla-JSS

SUN: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SUN

SunRsaSign: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SunRsaSign

SunEC: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SunEC

SunJSSE: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SunJSSE

SunJCE: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SunJCE

SunJGSS: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SunJGSS

SunASL: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SunSASL

XMLDsig: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) XMLDSig

SunPCSC: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SunPCSC

JdkLDAP: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) JdkLDAP

SunJdkSASL: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) JdkSASL

SunPKCS11: $(MAIN).class
	$(JVM) -classpath ${CLASSPATH} $(MAIN) SunPKCS11


clean:
	$(RM) *.class


